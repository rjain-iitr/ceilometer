diff --git a/cinder/scheduler/flows/create_volume.py b/cinder/scheduler/flows/create_volume.py
index 70e9527..114a66e 100644
--- a/cinder/scheduler/flows/create_volume.py
+++ b/cinder/scheduler/flows/create_volume.py
@@ -21,6 +21,7 @@ from cinder.i18n import _, _LE
 from cinder import rpc
 from cinder import utils
 from cinder.volume.flows import common
+from cinder.volume import utils as volume_utils
 
 LOG = logging.getLogger(__name__)
 
@@ -124,6 +125,11 @@ class ScheduleCreateVolumeTask(flow_utils.CinderTask):
 
     def execute(self, context, request_spec, filter_properties):
         try:
+            volume_ref = self.db_api.volume_get(context,
+                                                request_spec['volume_id'])
+            volume_utils.notify_about_volume_usage(context,
+                                                   volume_ref,
+                                                   'create.attempted')
             self.driver_api.schedule_create_volume(context, request_spec,
                                                    filter_properties)
         except Exception as e:
@@ -134,6 +140,12 @@ class ScheduleCreateVolumeTask(flow_utils.CinderTask):
             with excutils.save_and_reraise_exception(
                     reraise=not isinstance(e, exception.NoValidHost)):
                 try:
+                    volume_id = request_spec['volume_id']
+                    volume_ref = self.db_api.volume_get(context,
+                                                        volume_id)
+                    volume_utils.notify_about_volume_usage(context,
+                                                           volume_ref,
+                                                           'create.failed')
                     self._handle_failure(context, request_spec, e)
                 finally:
                     common.error_out_volume(context, self.db_api,
diff --git a/cinder/volume/manager.py b/cinder/volume/manager.py
index 5fb220f..d48460f 100644
--- a/cinder/volume/manager.py
+++ b/cinder/volume/manager.py
@@ -704,7 +704,8 @@ class VolumeManager(manager.SchedulerDependentManager):
 
         self._notify_about_snapshot_usage(
             context, snapshot, "create.start")
-
+        self._notify_about_snapshot_usage(
+            context, snapshot, "create.attempted")
         try:
             # NOTE(flaper87): Verify the driver is enabled
             # before going forward. The exception will be caught
@@ -722,6 +723,8 @@ class VolumeManager(manager.SchedulerDependentManager):
 
         except Exception:
             with excutils.save_and_reraise_exception():
+                self._notify_about_snapshot_usage(
+                    context, snapshot, "create.failed")
                 snapshot.status = 'error'
                 snapshot.save()
 
